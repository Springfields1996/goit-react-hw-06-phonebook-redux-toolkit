{"version":3,"sources":["styles/style.module.css","styles/header-style.module.css","redux/actions/contactActions.js","redux/types.js","redux/actions/filterAction.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/App.js","redux/reduces/reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","deleteContacts","filterContacts","connect","state","contacts","notification","props","useState","name","number","setState","setNotification","handleChange","target","value","CSSTransition","in","timeout","classNames","unmountOnExit","className","style","existNotification","onSubmit","evt","preventDefault","find","elem","setTimeout","id","uuidv4","alert","form","formLabel","formInput","type","placeholder","onChange","formInput2","addButton","Contacts","contact","onDeleteContact","contactList","key","deleteButton","onClick","Filter","marginLeft","App","filteredContacts","filter","el","toLowerCase","includes","this","main","appear","headerStyle","header","length","noContacts","TransitionGroup","component","list","map","React","Component","contactReducer","createReducer","action","payload","filterReducer","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.396fef54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__VRAFZ\",\"formLabel\":\"style_formLabel__3ifnd\",\"formInput\":\"style_formInput__2Aoi6\",\"formInput2\":\"style_formInput2__3HJi5\",\"header\":\"style_header__3tHkf\",\"main\":\"style_main__1y40s\",\"addButton\":\"style_addButton__SaqUI\",\"deleteButton\":\"style_deleteButton__3SQpP\",\"list\":\"style_list__Q4gyO\",\"contactList\":\"style_contactList__J1DBl\",\"noContacts\":\"style_noContacts__HkFOJ\",\"existNotification\":\"style_existNotification__D9QCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"header-style_appear__29uHz\",\"appearActive\":\"header-style_appearActive__1_Jf2\"};","import { createAction } from '@reduxjs/toolkit';\nimport { ADD_CONTACT, DELETE_CONTACT } from '../types';\n\nexport const addContact = createAction(ADD_CONTACT);\nexport const deleteContacts = createAction(DELETE_CONTACT);\n","const ADD_CONTACT = 'contacts/ADD';\nconst FILTER_CONTACTS = 'contacts/FILTER';\nconst DELETE_CONTACT = 'contacts/DELETE';\nconst SWITCH_NOTIFICATION = 'notification/SWITCH';\n\nexport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACTS, SWITCH_NOTIFICATION };\n","import { createAction } from '@reduxjs/toolkit';\nimport { FILTER_CONTACTS } from '../types';\n\nexport const filterContacts = createAction(FILTER_CONTACTS);\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/actions/contactActions';\nimport style from '../../styles/style.module.css';\nimport { CSSTransition } from 'react-transition-group';\n\nconst Form = props => {\n  const [state, setState] = useState({ name: '', number: '' });\n  const [notification, setNotification] = useState(false);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (state.name && state.number) {\n      if (props.contacts.find(elem => elem.name === state.name)) {\n        setNotification(true);\n        setTimeout(() => {\n          setNotification(false);\n        }, 2500);\n      } else {\n        props.addContact({ id: uuidv4(), ...state });\n        setState({ name: '', number: '' });\n      }\n    } else {\n      alert('Fill all fields!');\n    }\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    setState(state => ({ ...state, [name]: value }));\n  };\n\n  return (\n    <>\n      <CSSTransition\n        in={notification}\n        timeout={500}\n        classNames=\"notification\"\n        unmountOnExit\n      >\n        <div className={style.existNotification}>\n          This name is already exist\n        </div>\n      </CSSTransition>\n      <form onSubmit={handleSubmit} className={style.form}>\n        <label className={style.formLabel}>\n          Name\n          <input\n            className={style.formInput}\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            value={state.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={style.formLabel}>\n          Number\n          <input\n            className={style.formInput2}\n            type=\"text\"\n            placeholder=\"Enter number\"\n            name=\"number\"\n            value={state.number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={style.addButton}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n  notification: state.notification,\n});\n\nexport default connect(mapStateToProps, { addContact })(Form);\n","import React from 'react';\nimport style from '../../styles/style.module.css';\nimport '../../styles/contactsStyle.css';\n\nexport const Contacts = ({ contact, onDeleteContact }) => (\n  <li className={style.contactList} key={contact.id}>\n    {contact.name}: {contact.number}\n    <button\n      className={style.deleteButton}\n      id={contact.id}\n      type=\"button\"\n      onClick={() => onDeleteContact(contact.id)}\n    >\n      Delete\n    </button>\n  </li>\n);\n","import React from 'react';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      <label>\n        Sort by name\n        <input\n          style={{ marginLeft: 15 }}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { addContact, deleteContacts } from '../redux/actions/contactActions';\nimport { filterContacts } from '../redux/actions/filterAction';\n\nimport { connect } from 'react-redux';\nimport Form from './Form/Form';\nimport { Contacts } from './Contacts/Contacts';\nimport { Filter } from './Filter/Filter';\nimport headerStyle from '../styles/header-style.module.css';\nimport '../styles/filterAnimation.css';\nimport style from '../styles/style.module.css';\n\nclass App extends React.Component {\n  filteredContacts = (contacts, filter) => {\n    return filter\n      ? contacts.filter(el =>\n          el.name.toLowerCase().includes(filter.toLowerCase()),\n        )\n      : contacts;\n  };\n\n  render() {\n    const { contacts, filter, filterContacts } = this.props;\n    // contacts &&\n    //   setTimeout(() => {\n    //     !contacts.length && filterContacts('');\n    //   }, 1500);\n    return (\n      <div className={style.main}>\n        <CSSTransition\n          in={true}\n          appear\n          timeout={500}\n          classNames={headerStyle}\n          unmountOnExit\n        >\n          <h2 className={style.header}>Phonebook</h2>\n        </CSSTransition>\n        <Form />\n        <h2 className={style.header}>Contacts</h2>\n        {contacts.length ? (\n          <CSSTransition\n            in={contacts.length > 1}\n            timeout={300}\n            classNames=\"filter\"\n            unmountOnExit\n          >\n            <Filter\n              value={filter}\n              onChange={({ target }) => filterContacts(target.value)}\n            />\n          </CSSTransition>\n        ) : (\n          <p className={style.noContacts}>No contacts yet...</p>\n        )}\n        <TransitionGroup component=\"ul\" className={style.list}>\n          {this.filteredContacts(contacts, filter).map(elem => (\n            <CSSTransition key={elem.id} timeout={250} classNames=\"form\">\n              <Contacts\n                contact={elem}\n                onDeleteContact={this.props.deleteContacts}\n              />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n    filter: state.filter,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addContact,\n  filterContacts,\n  deleteContacts,\n})(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContacts } from '../actions/contactActions';\nimport { filterContacts } from '../actions/filterAction';\n\nexport const contactReducer = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContacts]: (state, action) => [\n    ...state.filter(el => el.id !== action.payload),\n  ],\n});\n\nexport const filterReducer = createReducer('', {\n  [filterContacts]: (state, action) => action.payload,\n});\n\nexport const rootReducer = combineReducers({\n  filter: filterReducer,\n  contacts: contactReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { rootReducer } from './reduces/reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n});\n\npersistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport { store } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}